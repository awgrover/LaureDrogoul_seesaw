#!/bin/bash
set -e
dev=$1

img=2015-02-16-raspbian-wheezy.img
if [ ! -e $img ]; then
    echo "There is no (assumed img) $img"
    exit 1
fi

if [ "$1" == "" ]; then
    # it was...
    dev=/dev/mmcblk0
fi

if [ ! -e $dev ]; then
    echo "Expected a device for the ssd, but '$dev' isn't there"
    exit 1
fi

if [ $UID != 0 ]; then
    sudo -p 'sudo for disk ops, passwd: ' env OK=1 $0 $dev
    exit $?
fi

if [ "$1" == "--init" ]; then
    if [ "$OK" == '' ]; then
        lsblk -f $dev
        echo -n "We are going to rewrite the entire device, ok? yN: "
        read ok
        if [[ "$ok" != 'y' && $ok != 'Y' ]]; then
            echo "aborted"
            exit 2
        fi
    fi

    echo "rooting.."

    if mount -l | grep $dev >/dev/null; then
        echo "unmounting..."
        lsblk -l -n -o NAME | xargs --no-run-if-empty -n 1 -ix umount /dev/x
    fi

    args="dd status=progress bs=4M if=$img of=$dev"
    echo
    echo $args
    echo -n "Confirm that yN: "
    read ok
    if [[ "$ok" != 'y' && $ok != 'Y' ]]; then
        echo "aborted"
        exit 2
    fi
    $args

    lsblk -f /dev/mmcblk0
fi


# Mount

set -x
rootfs=/dev/`lsblk -l -o NAME,FSTYPE,TYPE -n $dev | egrep -v ' vfat| disk' | awk '{print $1}'`
dir=/mnt/pimnt
mkdir -p $dir
if ! mount -l | grep $dev >/dev/null; then
    mount $rootfs $dir
fi
lsblk -f $dev

echo -n "Which pi: 1|2 "
read pi

# remove old wifi picks
(cd ..; sudo -u `stat -c '%U' .` git status --porcelain install/etc/network/interfaces.d | grep '?' | awk '{print $2}' | xargs --no-run-if-empty rm)

wificonf=`perl -an -e 'use File::Basename; /^\s+wpa-ssid/ && (print basename($ARGV)."/".$F[1]." ")' etc/network/interfaces.d/*`
echo -n "Which wifi at first boot: $wificonf ? "
read wifi

env PI=$pi SDROOTFS=$dir WIFI=$wifi make copy_to_sd
